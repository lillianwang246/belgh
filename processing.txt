

  import processing.serial.*;
  import processing.sound.*;
  SoundFile file;


  int bgcolor;           // Background color
  int fgcolor;           // Fill color
  Serial myPort;                       // The serial port
  int[] serialInArray = new int[3];    // Where we'll put what we receive
  int serialCount = 0;                 // A count of how many bytes we receive
  int xpos, ypos;                // Starting position of the ball
  boolean firstContact = false;        // Whether we've heard from the microcontroller

  void setup() {
    size(256, 256);  // Stage size
    noStroke();      // No border on the next thing drawn

    // Set the starting position of the ball (middle of the stage)
    xpos = width / 2;
    ypos = height / 2;

    // Print a list of the serial ports for debugging purposes
    // if using Processing 2.1 or later, use Serial.printArray()
    //println(Serial.list());

    // I know that the first port in the serial list on my Mac is always my FTDI
    // adaptor, so I open Serial.list()[0].
    // On Windows machines, this generally opens COM1.
    // Open whatever port is the one you're using.
    //String portName = Serial.list()[0];
    myPort = new Serial(this, "COM6", 9600);
    
      file = new SoundFile(this, "music/Fan.tasia.mp3");
      file.amp(0.5);
      file.play();
  }

  void draw() {
    float xNum = map(xpos, 0,255,0, 1); // volume, from 0 to 1
    float yNum = map(ypos, 0, 255, 0, 2); // rate, from 0.5 (half-speed) to 2 (double speed)
    // map(variable (with any number), lowest range, highest range, new low, new high)
    background(fgcolor);
    
    // Draw the shape
    
    fill(0,255,0);
    ellipse(width/2, height/2, xNum*100, yNum*100);
    fill(255,0,0);
    ellipse(xpos, ypos, 20,20);
    
    line(width/2, 0, width/2, height);
    stroke(126);
    line(0, height/2, height, height/2);

    
    file.amp(xNum);
    file.rate(yNum);
    fill(0,0,0);
    text("SLOW", 129, 10);
    text("FAST",129,250);
    
    text("LOUD", 220, 128);
    text("QUIET", 0, 128);
  }

  void serialEvent(Serial myPort) {
    // read a byte from the serial port:
    int inByte = myPort.read();
    // if this is the first byte received, and it's an A, clear the serial
    // buffer and note that you've had first contact from the microcontroller.
    // Otherwise, add the incoming byte to the array:
    if (firstContact == false) {
      if (inByte == 'A') {
        myPort.clear();          // clear the serial port buffer
        firstContact = true;     // you've had first contact from the microcontroller
        myPort.write('A');       // ask for more
      }
    }
    else {
      // Add the latest byte from the serial port to array:
      serialInArray[serialCount] = inByte;
      serialCount++;

      // If we have 3 bytes:
      if (serialCount > 2 ) {
        xpos = serialInArray[0];
        ypos = serialInArray[1];
        fgcolor = serialInArray[2];

        // print the values (for debugging purposes only):
        println(xpos + "\t" + ypos + "\t" + fgcolor);

        // Send a capital A to request new sensor readings:
        myPort.write('A');
        // Reset serialCount:
        serialCount = 0;
      }
    }
  }
